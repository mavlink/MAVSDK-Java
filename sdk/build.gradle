buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.9.4"
    }
}

subprojects {
    apply plugin: 'com.google.protobuf'
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    group = 'io.mavsdk'
    archivesBaseName = 'mavsdk'
    version = '3.0.0'

    repositories {
        jcenter()
        mavenCentral()
    }

    configurations {
        checkstyleClasspath
    }

    dependencies {
        checkstyleClasspath 'com.puppycrawl.tools:checkstyle:8.17'
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    def grpcVersion = '1.61.1'

    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.25.2'
        }

        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
            }
        }

        generateProtoTasks {
            all()*.each { task ->
                task.builtins {
                    java {
                        option "lite"
                    }
                }

                task.plugins {
                    grpc {
                        option 'lite'
                    }

                    mavsdk {
                        option 'file_ext=java'
                        option "template_path=$project.rootDir/templates/"
                    }
                }
            }
        }
    }

    sourceSets {
        main {
            proto {
                srcDir "$project.rootDir/proto/protos/"
            }

            java {
                srcDir 'build/generated/source/proto/main/javalite'
                srcDir 'build/generated/source/proto/main/grpc'
                srcDir 'build/generated/source/proto/main/mavsdk'
            }
        }
    }

    tasks.withType(Jar).all {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    if (project.hasProperty('ossrhUsername')
        && project.hasProperty('ossrhPassword')) {

        afterEvaluate {
            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        from components.java

                        pom {
                            name = 'MAVSDK-Java'
                            packaging = 'jar'
                            description = 'MAVSDK client for Java.'
                            url = 'https://github.com/mavlink/MAVSDK-Java'

                            scm {
                                connection = 'scm:git:https://github.com/mavlink/MAVSDK-Java'
                                developerConnection = 'scm:git:https://github.com/mavlink/MAVSDK-Java'
                                url = 'https://github.com/mavlink/MAVSDK-Java'
                            }

                            licenses {
                                license {
                                    name = 'BSD 3-Clause "New"'
                                    url = 'https://opensource.org/licenses/BSD-3-Clause'
                                }
                            }

                            developers {
                                developer {
                                    id = 'jonasvautherin'
                                    name = 'Jonas Vautherin'
                                    email = 'dev@jonas.vautherin.ch'
                                }
                            }
                        }
                    }
                }
                repositories {
                    maven {
                        url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

                        credentials {
                            username = ossrhUsername
                            password = ossrhPassword
                        }
                    }
                }
            }

            signing {
                useGpgCmd()
                sign publishing.publications.mavenJava
            }
        }
    }

    idea {
        module {
            inheritOutputDirs = false
            outputDir = compileJava.destinationDir
            testOutputDir = compileTestJava.destinationDir
        }
    }

    dependencies {
        // The protobuf configuration which was set earlier would generate well-known
        // protos which would create conflicts with other libraries that use them as well
        compileOnly "io.grpc:grpc-protobuf:${grpcVersion}"

        implementation "io.grpc:grpc-okhttp:${grpcVersion}"
        implementation "io.grpc:grpc-protobuf-lite:${grpcVersion}"
        implementation "io.grpc:grpc-stub:${grpcVersion}"
        implementation 'org.slf4j:slf4j-api:2.0.12'
        api 'io.reactivex.rxjava2:rxjava:2.2.21'

        compileOnly "javax.annotation:javax.annotation-api:1.3.2"

        testImplementation "io.grpc:grpc-testing:${grpcVersion}"
        testImplementation 'junit:junit:4.12'
        testImplementation 'org.mockito:mockito-core:2.13.0'
    }
}
